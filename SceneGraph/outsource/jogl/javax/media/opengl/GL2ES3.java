/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/opengl/GLEmitter.java on Tue Mar 11 04:17:08 CET 2014 ----! */

package javax.media.opengl;

import java.util.*;
import javax.media.opengl.*;
import javax.media.opengl.fixedfunc.*;
import jogamp.opengl.*;
import java.io.PrintStream;
import com.jogamp.gluegen.runtime.*;
import com.jogamp.common.os.*;
import com.jogamp.common.nio.*;
import java.nio.*;

 /**
  * <p> 
  * Interface containing the common subset of core GL2 and GLES3 (OpenGL ES 3.0).<br/>
  * This interface reflects only the programmable shader functionality of desktop and embedded OpenGL<br/>
  * This interface is not GLES3 complete and merely exist to avoid duplicated definitions.<br/>
  * </p>
  */
public interface GL2ES3 extends GL2ES2{

  /** Part of <code>GL_VERSION_1_1</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_0</code> */
  public static final int GL_GREEN = 0x1904;
  /** Part of <code>GL_VERSION_1_1</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_0</code> */
  public static final int GL_BLUE = 0x1905;
  /** Part of <code>GL_VERSION_1_1</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_0</code> */
  public static final int GL_READ_BUFFER = 0x0C02;
  /** Part of <code>GL_VERSION_1_1</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_0</code> */
  public static final int GL_COLOR = 0x1800;
  /** Part of <code>GL_VERSION_1_1</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_0</code> */
  public static final int GL_DEPTH = 0x1801;
  /** Part of <code>GL_VERSION_1_1</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_0</code> */
  public static final int GL_STENCIL = 0x1802;
  /** Part of <code>GL_VERSION_1_1</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_0</code> */
  public static final int GL_PACK_ROW_LENGTH = 0x0D02;
  /** Part of <code>GL_VERSION_1_1</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_0</code> */
  public static final int GL_PACK_SKIP_PIXELS = 0x0D04;
  /** Part of <code>GL_VERSION_1_1</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_0</code> */
  public static final int GL_PACK_SKIP_ROWS = 0x0D03;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_imaging</code> */
  public static final int GL_MIN = 0x8007;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_imaging</code> */
  public static final int GL_MAX = 0x8008;
  /** Part of <code>GL_VERSION_1_2</code>, <code>GL_ES_VERSION_3_0</code> */
  public static final int GL_UNPACK_SKIP_IMAGES = 0x806D;
  /** Part of <code>GL_VERSION_1_2</code>, <code>GL_ES_VERSION_3_0</code> */
  public static final int GL_UNPACK_IMAGE_HEIGHT = 0x806E;
  /** Part of <code>GL_VERSION_1_2</code>, <code>GL_ES_VERSION_3_0</code> */
  public static final int GL_MAX_ELEMENTS_VERTICES = 0x80E8;
  /** Part of <code>GL_VERSION_1_2</code>, <code>GL_ES_VERSION_3_0</code> */
  public static final int GL_MAX_ELEMENTS_INDICES = 0x80E9;
  /** Part of <code>GL_VERSION_1_2</code>, <code>GL_ES_VERSION_3_0</code> */
  public static final int GL_TEXTURE_MIN_LOD = 0x813A;
  /** Part of <code>GL_VERSION_1_2</code>, <code>GL_ES_VERSION_3_0</code> */
  public static final int GL_TEXTURE_MAX_LOD = 0x813B;
  /** Part of <code>GL_VERSION_1_2</code>, <code>GL_ES_VERSION_3_0</code> */
  public static final int GL_TEXTURE_BASE_LEVEL = 0x813C;
  /** Part of <code>GL_VERSION_1_2</code>, <code>GL_ES_VERSION_3_0</code> */
  public static final int GL_TEXTURE_MAX_LEVEL = 0x813D;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_4</code> */
  public static final int GL_MAX_TEXTURE_LOD_BIAS = 0x84FD;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_5</code> */
  public static final int GL_STREAM_READ = 0x88E1;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_5</code> */
  public static final int GL_STREAM_COPY = 0x88E2;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_5</code> */
  public static final int GL_STATIC_READ = 0x88E5;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_5</code> */
  public static final int GL_STATIC_COPY = 0x88E6;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_5</code> */
  public static final int GL_DYNAMIC_READ = 0x88E9;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_5</code> */
  public static final int GL_DYNAMIC_COPY = 0x88EA;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_0</code> */
  public static final int GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_0</code> */
  public static final int GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code> */
  public static final int GL_PIXEL_PACK_BUFFER = 0x88EB;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code> */
  public static final int GL_PIXEL_UNPACK_BUFFER = 0x88EC;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code> */
  public static final int GL_PIXEL_PACK_BUFFER_BINDING = 0x88ED;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code> */
  public static final int GL_PIXEL_UNPACK_BUFFER_BINDING = 0x88EF;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code> */
  public static final int GL_FLOAT_MAT2x3 = 0x8B65;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code> */
  public static final int GL_FLOAT_MAT2x4 = 0x8B66;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code> */
  public static final int GL_FLOAT_MAT3x2 = 0x8B67;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code> */
  public static final int GL_FLOAT_MAT3x4 = 0x8B68;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code> */
  public static final int GL_FLOAT_MAT4x2 = 0x8B69;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code> */
  public static final int GL_FLOAT_MAT4x3 = 0x8B6A;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code> */
  public static final int GL_SRGB8 = 0x8C41;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_MAJOR_VERSION = 0x821B;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_MINOR_VERSION = 0x821C;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_NUM_EXTENSIONS = 0x821D;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_MIN_PROGRAM_TEXEL_OFFSET = 0x8904;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_MAX_PROGRAM_TEXEL_OFFSET = 0x8905;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_geometry_shader4</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_MAX_VARYING_COMPONENTS = 0x8B4B;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_texture_shared_exponent</code> */
  public static final int GL_RGB9_E5 = 0x8C3D;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_texture_shared_exponent</code> */
  public static final int GL_UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8C76;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_TRANSFORM_FEEDBACK_VARYINGS = 0x8C83;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_RASTERIZER_DISCARD = 0x8C89;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_INTERLEAVED_ATTRIBS = 0x8C8C;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_SEPARATE_ATTRIBS = 0x8C8D;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_TRANSFORM_FEEDBACK_BUFFER = 0x8C8E;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_texture_integer</code> */
  public static final int GL_RGBA32UI = 0x8D70;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_texture_integer</code> */
  public static final int GL_RGB32UI = 0x8D71;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_texture_integer</code> */
  public static final int GL_RGBA16UI = 0x8D76;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_texture_integer</code> */
  public static final int GL_RGB16UI = 0x8D77;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_texture_integer</code> */
  public static final int GL_RGBA8UI = 0x8D7C;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_texture_integer</code> */
  public static final int GL_RGB8UI = 0x8D7D;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_texture_integer</code> */
  public static final int GL_RGBA32I = 0x8D82;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_texture_integer</code> */
  public static final int GL_RGB32I = 0x8D83;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_texture_integer</code> */
  public static final int GL_RGBA16I = 0x8D88;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_texture_integer</code> */
  public static final int GL_RGB16I = 0x8D89;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_texture_integer</code> */
  public static final int GL_RGBA8I = 0x8D8E;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_texture_integer</code> */
  public static final int GL_RGB8I = 0x8D8F;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_texture_integer</code> */
  public static final int GL_RED_INTEGER = 0x8D94;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_texture_integer</code> */
  public static final int GL_RGB_INTEGER = 0x8D98;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_texture_integer</code> */
  public static final int GL_RGBA_INTEGER = 0x8D99;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code> */
  public static final int GL_SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code> */
  public static final int GL_SAMPLER_CUBE_SHADOW = 0x8DC5;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code> */
  public static final int GL_UNSIGNED_INT_VEC2 = 0x8DC6;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code> */
  public static final int GL_UNSIGNED_INT_VEC3 = 0x8DC7;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code> */
  public static final int GL_UNSIGNED_INT_VEC4 = 0x8DC8;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code> */
  public static final int GL_INT_SAMPLER_2D = 0x8DCA;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code> */
  public static final int GL_INT_SAMPLER_3D = 0x8DCB;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code> */
  public static final int GL_INT_SAMPLER_CUBE = 0x8DCC;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code> */
  public static final int GL_INT_SAMPLER_2D_ARRAY = 0x8DCF;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code> */
  public static final int GL_UNSIGNED_INT_SAMPLER_2D = 0x8DD2;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code> */
  public static final int GL_UNSIGNED_INT_SAMPLER_3D = 0x8DD3;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code> */
  public static final int GL_UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code> */
  public static final int GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_BUFFER_ACCESS_FLAGS = 0x911F;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_BUFFER_MAP_LENGTH = 0x9120;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_BUFFER_MAP_OFFSET = 0x9121;
  /** Part of <code>GL_ARB_depth_buffer_float</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_DEPTH_COMPONENT32F = 0x8CAC;
  /** Part of <code>GL_ARB_depth_buffer_float</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_DEPTH32F_STENCIL8 = 0x8CAD;
  /** Part of <code>GL_ARB_depth_buffer_float</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;
  /** Part of <code>GL_ARB_framebuffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212;
  /** Part of <code>GL_ARB_framebuffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213;
  /** Part of <code>GL_ARB_framebuffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214;
  /** Part of <code>GL_ARB_framebuffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215;
  /** Part of <code>GL_ARB_framebuffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216;
  /** Part of <code>GL_ARB_framebuffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217;
  /** Part of <code>GL_ARB_framebuffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_FRAMEBUFFER_DEFAULT = 0x8218;
  /** Part of <code>GL_ARB_framebuffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_FRAMEBUFFER_UNDEFINED = 0x8219;
  /** Part of <code>GL_ARB_framebuffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_DEPTH_STENCIL_ATTACHMENT = 0x821A;
  /** Part of <code>GL_ARB_framebuffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_framebuffer_blit</code> */
  public static final int GL_DRAW_FRAMEBUFFER_BINDING = 0x8CA6;
  /** Part of <code>GL_ARB_framebuffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_framebuffer_blit</code> */
  public static final int GL_READ_FRAMEBUFFER = 0x8CA8;
  /** Part of <code>GL_ARB_framebuffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_framebuffer_blit</code> */
  public static final int GL_DRAW_FRAMEBUFFER = 0x8CA9;
  /** Part of <code>GL_ARB_framebuffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_framebuffer_blit</code> */
  public static final int GL_READ_FRAMEBUFFER_BINDING = 0x8CAA;
  /** Part of <code>GL_ARB_framebuffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_RENDERBUFFER_SAMPLES = 0x8CAB;
  /** Part of <code>GL_ARB_framebuffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56;
  /** Part of <code>GL_ARB_framebuffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_MAX_SAMPLES = 0x8D57;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code> */
  public static final int GL_RG_INTEGER = 0x8228;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code> */
  public static final int GL_R8I = 0x8231;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code> */
  public static final int GL_R8UI = 0x8232;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code> */
  public static final int GL_R16I = 0x8233;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code> */
  public static final int GL_R16UI = 0x8234;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code> */
  public static final int GL_R32I = 0x8235;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code> */
  public static final int GL_R32UI = 0x8236;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code> */
  public static final int GL_RG8I = 0x8237;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code> */
  public static final int GL_RG8UI = 0x8238;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code> */
  public static final int GL_RG16I = 0x8239;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code> */
  public static final int GL_RG16UI = 0x823A;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code> */
  public static final int GL_RG32I = 0x823B;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>, <code>GL_ARB_texture_rg</code> */
  public static final int GL_RG32UI = 0x823C;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_vertex_array_object</code>, <code>GL_VERSION_3_0</code> */
  public static final int GL_VERTEX_ARRAY_BINDING = 0x85B5;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_R8_SNORM = 0x8F94;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_RG8_SNORM = 0x8F95;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_RGB8_SNORM = 0x8F96;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_RGBA8_SNORM = 0x8F97;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_SIGNED_NORMALIZED = 0x8F9C;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_copy_buffer</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_COPY_READ_BUFFER = 0x8F36;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_copy_buffer</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_COPY_WRITE_BUFFER = 0x8F37;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_BUFFER = 0x8A11;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_BUFFER_BINDING = 0x8A28;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_BUFFER_START = 0x8A29;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_BUFFER_SIZE = 0x8A2A;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_MAX_UNIFORM_BLOCK_SIZE = 0x8A30;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 0x8A35;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_ACTIVE_UNIFORM_BLOCKS = 0x8A36;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_TYPE = 0x8A37;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_SIZE = 0x8A38;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_NAME_LENGTH = 0x8A39;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_BLOCK_INDEX = 0x8A3A;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_OFFSET = 0x8A3B;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_ARRAY_STRIDE = 0x8A3C;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_MATRIX_STRIDE = 0x8A3D;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_IS_ROW_MAJOR = 0x8A3E;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_BLOCK_BINDING = 0x8A3F;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_BLOCK_DATA_SIZE = 0x8A40;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_BLOCK_NAME_LENGTH = 0x8A41;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code> */
  public static final int GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_copy_buffer</code> */
  public static final int GL_COPY_READ_BUFFER_BINDING = 0x8F36;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_copy_buffer</code> */
  public static final int GL_COPY_WRITE_BUFFER_BINDING = 0x8F37;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_transform_feedback2</code> */
  public static final int GL_TRANSFORM_FEEDBACK_PAUSED = 0x8E23;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_transform_feedback2</code> */
  public static final int GL_TRANSFORM_FEEDBACK_ACTIVE = 0x8E24;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_RGBA_ASTC_4x4_KHR = 0x93B0;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_RGBA_ASTC_5x4_KHR = 0x93B1;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_RGBA_ASTC_5x5_KHR = 0x93B2;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_RGBA_ASTC_6x5_KHR = 0x93B3;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_RGBA_ASTC_6x6_KHR = 0x93B4;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_RGBA_ASTC_8x5_KHR = 0x93B5;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_RGBA_ASTC_8x6_KHR = 0x93B6;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_RGBA_ASTC_8x8_KHR = 0x93B7;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_RGBA_ASTC_10x5_KHR = 0x93B8;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_RGBA_ASTC_10x6_KHR = 0x93B9;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_RGBA_ASTC_10x8_KHR = 0x93BA;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_RGBA_ASTC_10x10_KHR = 0x93BB;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_RGBA_ASTC_12x10_KHR = 0x93BC;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_RGBA_ASTC_12x12_KHR = 0x93BD;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 0x93D0;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = 0x93D1;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = 0x93D2;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = 0x93D3;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = 0x93D4;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = 0x93D5;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = 0x93D6;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = 0x93D7;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = 0x93D8;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = 0x93D9;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = 0x93DA;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 0x93DB;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 0x93DC;
  /** Part of <code>GL_KHR_texture_compression_astc_ldr</code> */
  public static final int GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 0x93DD;

  /** Entry point to C language function: <code> void {@native glBeginTransformFeedback}(GLenum primitiveMode); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glBeginTransformFeedback(int primitiveMode);

  /** Entry point to C language function: <code> void {@native glBindBufferBase}(GLenum target, GLuint index, GLuint buffer); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glBindBufferBase(int target, int index, int buffer);

  /** Entry point to C language function: <code> void {@native glBindBufferRange}(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glBindBufferRange(int target, int index, int buffer, long offset, long size);

  /** Entry point to C language function: <code> void {@native glBindVertexArray}(GLuint array); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_vertex_array_object</code>, <code>GL_VERSION_3_0</code>   */
  public void glBindVertexArray(int array);

  /** Entry point to C language function: <code> void {@native glBlitFramebuffer}(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter); </code> <br>Part of <code>GL_ARB_framebuffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_framebuffer_blit</code>   */
  public void glBlitFramebuffer(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, int mask, int filter);

  /** Entry point to C language function: <code> void {@native glClearBufferfi}(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glClearBufferfi(int buffer, int drawbuffer, float depth, int stencil);

  /** Entry point to C language function: <code> void {@native glClearBufferfv}(GLenum buffer, GLint drawbuffer, const GLfloat *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>
      @param value a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glClearBufferfv(int buffer, int drawbuffer, FloatBuffer value);

  /** Entry point to C language function: <code> void {@native glClearBufferfv}(GLenum buffer, GLint drawbuffer, const GLfloat *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glClearBufferfv(int buffer, int drawbuffer, float[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glClearBufferiv}(GLenum buffer, GLint drawbuffer, const GLint *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>
      @param value a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glClearBufferiv(int buffer, int drawbuffer, IntBuffer value);

  /** Entry point to C language function: <code> void {@native glClearBufferiv}(GLenum buffer, GLint drawbuffer, const GLint *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glClearBufferiv(int buffer, int drawbuffer, int[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glClearBufferuiv}(GLenum buffer, GLint drawbuffer, const GLuint *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>
      @param value a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glClearBufferuiv(int buffer, int drawbuffer, IntBuffer value);

  /** Entry point to C language function: <code> void {@native glClearBufferuiv}(GLenum buffer, GLint drawbuffer, const GLuint *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glClearBufferuiv(int buffer, int drawbuffer, int[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glCopyBufferSubData}(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_copy_buffer</code>, <code>GL_VERSION_3_1</code>   */
  public void glCopyBufferSubData(int readTarget, int writeTarget, long readOffset, long writeOffset, long size);

  /** Entry point to C language function: <code> void {@native glDeleteVertexArrays}(GLsizei n, const GLuint *  arrays); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_vertex_array_object</code>, <code>GL_VERSION_3_0</code>
      @param arrays a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glDeleteVertexArrays(int n, IntBuffer arrays);

  /** Entry point to C language function: <code> void {@native glDeleteVertexArrays}(GLsizei n, const GLuint *  arrays); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_vertex_array_object</code>, <code>GL_VERSION_3_0</code>   */
  public void glDeleteVertexArrays(int n, int[] arrays, int arrays_offset);

  /** Entry point to C language function: <code> void {@native glDrawArraysInstanced}(GLenum mode, GLint first, GLsizei count, GLsizei instancecount); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code>; <code>GL_ARB_draw_instanced</code>   */
  public void glDrawArraysInstanced(int mode, int first, int count, int instancecount);

  /** Entry point to C language function: <code> void {@native glDrawBuffers}(GLsizei n, const GLenum *  bufs); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_0</code>; <code>GL_EXT_draw_buffers</code><code>GL_NV_draw_buffers</code>
      @param bufs a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glDrawBuffers(int n, IntBuffer bufs);

  /** Entry point to C language function: <code> void {@native glDrawBuffers}(GLsizei n, const GLenum *  bufs); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_0</code>; <code>GL_EXT_draw_buffers</code><code>GL_NV_draw_buffers</code>   */
  public void glDrawBuffers(int n, int[] bufs, int bufs_offset);

  /** Entry point to C language function: <code> void {@native glDrawElementsInstanced}(GLenum mode, GLsizei count, GLenum type, const GLvoid *  indices, GLsizei instancecount); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_1</code>; <code>GL_ARB_draw_instanced</code>   */
  public void glDrawElementsInstanced(int mode, int count, int type, long indices_buffer_offset, int instancecount);

  /** Entry point to C language function: <code> void {@native glDrawRangeElements}(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *  indices); </code> <br>Part of <code>GL_VERSION_1_2</code>, <code>GL_ES_VERSION_3_0</code>   */
  public void glDrawRangeElements(int mode, int start, int end, int count, int type, long indices_buffer_offset);

  /** Entry point to C language function: <code> void {@native glEndTransformFeedback}(void); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glEndTransformFeedback();

  /** Entry point to C language function: <code> void {@native glFramebufferTextureLayer}(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer); </code> <br>Part of <code>GL_ARB_framebuffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glFramebufferTextureLayer(int target, int attachment, int texture, int level, int layer);

  /** Entry point to C language function: <code> void {@native glGenVertexArrays}(GLsizei n, GLuint *  arrays); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_vertex_array_object</code>, <code>GL_VERSION_3_0</code>
      @param arrays a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGenVertexArrays(int n, IntBuffer arrays);

  /** Entry point to C language function: <code> void {@native glGenVertexArrays}(GLsizei n, GLuint *  arrays); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_vertex_array_object</code>, <code>GL_VERSION_3_0</code>   */
  public void glGenVertexArrays(int n, int[] arrays, int arrays_offset);

  /** Entry point to C language function: <code> void {@native glGetActiveUniformBlockName}(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *  length, GLchar *  uniformBlockName); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code>
      @param length a direct or array-backed {@link java.nio.IntBuffer}
      @param uniformBlockName a direct or array-backed {@link java.nio.ByteBuffer}   */
  public void glGetActiveUniformBlockName(int program, int uniformBlockIndex, int bufSize, IntBuffer length, ByteBuffer uniformBlockName);

  /** Entry point to C language function: <code> void {@native glGetActiveUniformBlockName}(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *  length, GLchar *  uniformBlockName); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code>   */
  public void glGetActiveUniformBlockName(int program, int uniformBlockIndex, int bufSize, int[] length, int length_offset, byte[] uniformBlockName, int uniformBlockName_offset);

  /** Entry point to C language function: <code> void {@native glGetActiveUniformBlockiv}(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *  params); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetActiveUniformBlockiv(int program, int uniformBlockIndex, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetActiveUniformBlockiv}(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *  params); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code>   */
  public void glGetActiveUniformBlockiv(int program, int uniformBlockIndex, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetActiveUniformsiv}(GLuint program, GLsizei uniformCount, const GLuint *  uniformIndices, GLenum pname, GLint *  params); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code>
      @param uniformIndices a direct or array-backed {@link java.nio.IntBuffer}
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetActiveUniformsiv(int program, int uniformCount, IntBuffer uniformIndices, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetActiveUniformsiv}(GLuint program, GLsizei uniformCount, const GLuint *  uniformIndices, GLenum pname, GLint *  params); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code>   */
  public void glGetActiveUniformsiv(int program, int uniformCount, int[] uniformIndices, int uniformIndices_offset, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> GLint {@native glGetFragDataLocation}(GLuint program, const GLchar *  name); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code>   */
  public int glGetFragDataLocation(int program, String name);

  /** Entry point to C language function: <code> void {@native glGetIntegeri_v}(GLenum target, GLuint index, GLint *  data); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>
      @param data a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetIntegeri_v(int target, int index, IntBuffer data);

  /** Entry point to C language function: <code> void {@native glGetIntegeri_v}(GLenum target, GLuint index, GLint *  data); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glGetIntegeri_v(int target, int index, int[] data, int data_offset);

  /** Entry point to C language function: <code> void {@native glGetInternalformativ}(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *  params); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_internalformat_query</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetInternalformativ(int target, int internalformat, int pname, int bufSize, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetInternalformativ}(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *  params); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_internalformat_query</code>   */
  public void glGetInternalformativ(int target, int internalformat, int pname, int bufSize, int[] params, int params_offset);

  /** Entry point to C language function: <code> const GLubyte *  {@native glGetStringi}(GLenum name, GLuint index); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public String glGetStringi(int name, int index);

  /** Entry point to C language function: <code> void {@native glGetTransformFeedbackVarying}(GLuint program, GLuint index, GLsizei bufSize, GLsizei *  length, GLsizei *  size, GLenum *  type, GLchar *  name); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>
      @param length a direct or array-backed {@link java.nio.IntBuffer}
      @param size a direct or array-backed {@link java.nio.IntBuffer}
      @param type a direct or array-backed {@link java.nio.IntBuffer}
      @param name a direct or array-backed {@link java.nio.ByteBuffer}   */
  public void glGetTransformFeedbackVarying(int program, int index, int bufSize, IntBuffer length, IntBuffer size, IntBuffer type, ByteBuffer name);

  /** Entry point to C language function: <code> void {@native glGetTransformFeedbackVarying}(GLuint program, GLuint index, GLsizei bufSize, GLsizei *  length, GLsizei *  size, GLenum *  type, GLchar *  name); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glGetTransformFeedbackVarying(int program, int index, int bufSize, int[] length, int length_offset, int[] size, int size_offset, int[] type, int type_offset, byte[] name, int name_offset);

  /** Entry point to C language function: <code> GLuint {@native glGetUniformBlockIndex}(GLuint program, const GLchar *  uniformBlockName); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code>   */
  public int glGetUniformBlockIndex(int program, String uniformBlockName);

  /** Entry point to C language function: <code> void {@native glGetUniformIndices}(GLuint program, GLsizei uniformCount, const GLchar * const  *  uniformNames, GLuint *  uniformIndices); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code>
      @param uniformIndices a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetUniformIndices(int program, int uniformCount, String[] uniformNames, IntBuffer uniformIndices);

  /** Entry point to C language function: <code> void {@native glGetUniformIndices}(GLuint program, GLsizei uniformCount, const GLchar * const  *  uniformNames, GLuint *  uniformIndices); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code>   */
  public void glGetUniformIndices(int program, int uniformCount, String[] uniformNames, int[] uniformIndices, int uniformIndices_offset);

  /** Entry point to C language function: <code> void {@native glGetUniformuiv}(GLuint program, GLint location, GLuint *  params); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetUniformuiv(int program, int location, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetUniformuiv}(GLuint program, GLint location, GLuint *  params); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code>   */
  public void glGetUniformuiv(int program, int location, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetVertexAttribIiv}(GLuint index, GLenum pname, GLint *  params); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetVertexAttribIiv(int index, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetVertexAttribIiv}(GLuint index, GLenum pname, GLint *  params); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glGetVertexAttribIiv(int index, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetVertexAttribIuiv}(GLuint index, GLenum pname, GLuint *  params); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetVertexAttribIuiv(int index, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetVertexAttribIuiv}(GLuint index, GLenum pname, GLuint *  params); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glGetVertexAttribIuiv(int index, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> GLboolean {@native glIsVertexArray}(GLuint array); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_vertex_array_object</code>, <code>GL_VERSION_3_0</code>   */
  public boolean glIsVertexArray(int array);

  /** Entry point to C language function: <code> void {@native glReadBuffer}(GLenum mode); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_1_0</code>   */
  public void glReadBuffer(int mode);

  /** Entry point to C language function: <code> void {@native glRenderbufferStorageMultisample}(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height); </code> <br>Part of <code>GL_ARB_framebuffer_object</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glRenderbufferStorageMultisample(int target, int samples, int internalformat, int width, int height);

  /** Entry point to C language function: <code> void {@native glTransformFeedbackVaryings}(GLuint program, GLsizei count, const GLchar * const  *  varyings, GLenum bufferMode); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glTransformFeedbackVaryings(int program, int count, String[] varyings, int bufferMode);

  /** Entry point to C language function: <code> void {@native glUniform1ui}(GLint location, GLuint v0); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code>   */
  public void glUniform1ui(int location, int v0);

  /** Entry point to C language function: <code> void {@native glUniform1uiv}(GLint location, GLsizei count, const GLuint *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code>
      @param value a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glUniform1uiv(int location, int count, IntBuffer value);

  /** Entry point to C language function: <code> void {@native glUniform1uiv}(GLint location, GLsizei count, const GLuint *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code>   */
  public void glUniform1uiv(int location, int count, int[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUniform2ui}(GLint location, GLuint v0, GLuint v1); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code>   */
  public void glUniform2ui(int location, int v0, int v1);

  /** Entry point to C language function: <code> void {@native glUniform2uiv}(GLint location, GLsizei count, const GLuint *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code>
      @param value a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glUniform2uiv(int location, int count, IntBuffer value);

  /** Entry point to C language function: <code> void {@native glUniform2uiv}(GLint location, GLsizei count, const GLuint *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code>   */
  public void glUniform2uiv(int location, int count, int[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUniform3ui}(GLint location, GLuint v0, GLuint v1, GLuint v2); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code>   */
  public void glUniform3ui(int location, int v0, int v1, int v2);

  /** Entry point to C language function: <code> void {@native glUniform3uiv}(GLint location, GLsizei count, const GLuint *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code>
      @param value a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glUniform3uiv(int location, int count, IntBuffer value);

  /** Entry point to C language function: <code> void {@native glUniform3uiv}(GLint location, GLsizei count, const GLuint *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code>   */
  public void glUniform3uiv(int location, int count, int[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUniform4ui}(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code>   */
  public void glUniform4ui(int location, int v0, int v1, int v2, int v3);

  /** Entry point to C language function: <code> void {@native glUniform4uiv}(GLint location, GLsizei count, const GLuint *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code>
      @param value a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glUniform4uiv(int location, int count, IntBuffer value);

  /** Entry point to C language function: <code> void {@native glUniform4uiv}(GLint location, GLsizei count, const GLuint *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>; <code>GL_EXT_gpu_shader4</code>   */
  public void glUniform4uiv(int location, int count, int[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUniformBlockBinding}(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_uniform_buffer_object</code>, <code>GL_VERSION_3_1</code>   */
  public void glUniformBlockBinding(int program, int uniformBlockIndex, int uniformBlockBinding);

  /** Entry point to C language function: <code> void {@native glUniformMatrix2x3fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>
      @param value a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glUniformMatrix2x3fv(int location, int count, boolean transpose, FloatBuffer value);

  /** Entry point to C language function: <code> void {@native glUniformMatrix2x3fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>   */
  public void glUniformMatrix2x3fv(int location, int count, boolean transpose, float[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUniformMatrix2x4fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>
      @param value a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glUniformMatrix2x4fv(int location, int count, boolean transpose, FloatBuffer value);

  /** Entry point to C language function: <code> void {@native glUniformMatrix2x4fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>   */
  public void glUniformMatrix2x4fv(int location, int count, boolean transpose, float[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUniformMatrix3x2fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>
      @param value a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glUniformMatrix3x2fv(int location, int count, boolean transpose, FloatBuffer value);

  /** Entry point to C language function: <code> void {@native glUniformMatrix3x2fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>   */
  public void glUniformMatrix3x2fv(int location, int count, boolean transpose, float[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUniformMatrix3x4fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>
      @param value a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glUniformMatrix3x4fv(int location, int count, boolean transpose, FloatBuffer value);

  /** Entry point to C language function: <code> void {@native glUniformMatrix3x4fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>   */
  public void glUniformMatrix3x4fv(int location, int count, boolean transpose, float[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUniformMatrix4x2fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>
      @param value a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glUniformMatrix4x2fv(int location, int count, boolean transpose, FloatBuffer value);

  /** Entry point to C language function: <code> void {@native glUniformMatrix4x2fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>   */
  public void glUniformMatrix4x2fv(int location, int count, boolean transpose, float[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUniformMatrix4x3fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>
      @param value a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glUniformMatrix4x3fv(int location, int count, boolean transpose, FloatBuffer value);

  /** Entry point to C language function: <code> void {@native glUniformMatrix4x3fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_2_1</code>   */
  public void glUniformMatrix4x3fv(int location, int count, boolean transpose, float[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glVertexAttribI4i}(GLuint index, GLint x, GLint y, GLint z, GLint w); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glVertexAttribI4i(int index, int x, int y, int z, int w);

  /** Entry point to C language function: <code> void {@native glVertexAttribI4iv}(GLuint index, const GLint *  v); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>
      @param v a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glVertexAttribI4iv(int index, IntBuffer v);

  /** Entry point to C language function: <code> void {@native glVertexAttribI4iv}(GLuint index, const GLint *  v); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glVertexAttribI4iv(int index, int[] v, int v_offset);

  /** Entry point to C language function: <code> void {@native glVertexAttribI4ui}(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glVertexAttribI4ui(int index, int x, int y, int z, int w);

  /** Entry point to C language function: <code> void {@native glVertexAttribI4uiv}(GLuint index, const GLuint *  v); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>
      @param v a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glVertexAttribI4uiv(int index, IntBuffer v);

  /** Entry point to C language function: <code> void {@native glVertexAttribI4uiv}(GLuint index, const GLuint *  v); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glVertexAttribI4uiv(int index, int[] v, int v_offset);

  /** Entry point to C language function: <code> void {@native glVertexAttribIPointer}(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *  pointer); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_0</code>   */
  public void glVertexAttribIPointer(int index, int size, int type, int stride, long pointer_buffer_offset);


  // --- Begin CustomJavaCode .cfg declarations
  
  /** Part of <code>GL_ARB_uniform_buffer_object</code> */
  public static final int GL_INVALID_INDEX = 0xFFFFFFFF ;
  
  /** Part of <code>GL_ARB_sync</code> */
  public static final long GL_TIMEOUT_IGNORED = 0xFFFFFFFFFFFFFFFFL ;
  
  /** Part of <code>GL_ARB_shader_image_load_store</code> */
  public static final int GL_ALL_BARRIER_BITS = 0xFFFFFFFF ;
  
  /** @deprecated Avoid original GL API namespace conflict. Use {@link #isPBOPackBound()} */
  public boolean glIsPBOPackBound();
  public boolean isPBOPackBound();
  
  /** @deprecated Avoid original GL API namespace conflict. Use {@link #isPBOUnpackBound()} */
  public boolean glIsPBOUnpackBound();
  public boolean isPBOUnpackBound();
  
  // ---- End CustomJavaCode .cfg declarations

} // end of class GL2ES3
