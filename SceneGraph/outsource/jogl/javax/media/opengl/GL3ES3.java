/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/opengl/GLEmitter.java on Tue Mar 11 04:17:15 CET 2014 ----! */

package javax.media.opengl;

import java.util.*;
import javax.media.opengl.*;
import javax.media.opengl.fixedfunc.*;
import jogamp.opengl.*;
import java.io.PrintStream;
import com.jogamp.gluegen.runtime.*;
import com.jogamp.common.os.*;
import com.jogamp.common.nio.*;
import java.nio.*;

 /**
  * <p> 
  * Interface containing the common subset of core GL3 (OpenGL 3.1+) and GLES3 (OpenGL ES 3.0).<br/>
  * This interface reflects only the programmable shader functionality of desktop and embedded OpenGL<br/>
  * This interface is almost GLES3 complete, lacking <code>GL_ARB_ES3_compatibility</code> extension.<br/>
  * </p>
  */
public interface GL3ES3 extends GL2ES3{

  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125;
  /** Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_MAX_SERVER_WAIT_TIMEOUT = 0x9111;
  /** Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_OBJECT_TYPE = 0x9112;
  /** Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_SYNC_CONDITION = 0x9113;
  /** Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_SYNC_STATUS = 0x9114;
  /** Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_SYNC_FLAGS = 0x9115;
  /** Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_SYNC_FENCE = 0x9116;
  /** Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_SYNC_GPU_COMMANDS_COMPLETE = 0x9117;
  /** Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_UNSIGNALED = 0x9118;
  /** Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_SIGNALED = 0x9119;
  /** Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_ALREADY_SIGNALED = 0x911A;
  /** Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_TIMEOUT_EXPIRED = 0x911B;
  /** Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_CONDITION_SATISFIED = 0x911C;
  /** Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_WAIT_FAILED = 0x911D;
  /** Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_SYNC_FLUSH_COMMANDS_BIT = 0x00000001;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_3</code>; <code>GL_ARB_instanced_arrays</code> */
  public static final int GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE;
  /** Part of <code>GL_ARB_sampler_objects</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_3</code> */
  public static final int GL_SAMPLER_BINDING = 0x8919;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_texture_rgb10_a2ui</code>, <code>GL_VERSION_3_3</code> */
  public static final int GL_RGB10_A2UI = 0x906F;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_texture_swizzle</code>, <code>GL_VERSION_3_3</code> */
  public static final int GL_TEXTURE_SWIZZLE_R = 0x8E42;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_texture_swizzle</code>, <code>GL_VERSION_3_3</code> */
  public static final int GL_TEXTURE_SWIZZLE_G = 0x8E43;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_texture_swizzle</code>, <code>GL_VERSION_3_3</code> */
  public static final int GL_TEXTURE_SWIZZLE_B = 0x8E44;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_texture_swizzle</code>, <code>GL_VERSION_3_3</code> */
  public static final int GL_TEXTURE_SWIZZLE_A = 0x8E45;
  /** Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code> */
  public static final int GL_INT_2_10_10_10_REV = 0x8D9F;

  /** Entry point to C language function: <code> void {@native glBindSampler}(GLuint unit, GLuint sampler); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_3</code>   */
  public void glBindSampler(int unit, int sampler);

  /** Entry point to C language function: <code> GLenum {@native glClientWaitSync}(GLsync sync, GLbitfield flags, GLuint64 timeout); </code> <br>Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code>   */
  public int glClientWaitSync(long sync, int flags, long timeout);

  /** Entry point to C language function: <code> void {@native glDeleteSamplers}(GLsizei count, const GLuint *  samplers); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_3</code>
      @param samplers a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glDeleteSamplers(int count, IntBuffer samplers);

  /** Entry point to C language function: <code> void {@native glDeleteSamplers}(GLsizei count, const GLuint *  samplers); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_3</code>   */
  public void glDeleteSamplers(int count, int[] samplers, int samplers_offset);

  /** Entry point to C language function: <code> void {@native glDeleteSync}(GLsync sync); </code> <br>Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code>   */
  public void glDeleteSync(long sync);

  /** Entry point to C language function: <code> GLsync {@native glFenceSync}(GLenum condition, GLbitfield flags); </code> <br>Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code>   */
  public long glFenceSync(int condition, int flags);

  /** Entry point to C language function: <code> void {@native glGenSamplers}(GLsizei count, GLuint *  samplers); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_3</code>
      @param samplers a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGenSamplers(int count, IntBuffer samplers);

  /** Entry point to C language function: <code> void {@native glGenSamplers}(GLsizei count, GLuint *  samplers); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_3</code>   */
  public void glGenSamplers(int count, int[] samplers, int samplers_offset);

  /** Entry point to C language function: <code> void {@native glGetBufferParameteri64v}(GLenum target, GLenum pname, GLint64 *  params); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code>
      @param params a direct or array-backed {@link java.nio.LongBuffer}   */
  public void glGetBufferParameteri64v(int target, int pname, LongBuffer params);

  /** Entry point to C language function: <code> void {@native glGetBufferParameteri64v}(GLenum target, GLenum pname, GLint64 *  params); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code>   */
  public void glGetBufferParameteri64v(int target, int pname, long[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetInteger64i_v}(GLenum target, GLuint index, GLint64 *  data); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code>
      @param data a direct or array-backed {@link java.nio.LongBuffer}   */
  public void glGetInteger64i_v(int target, int index, LongBuffer data);

  /** Entry point to C language function: <code> void {@native glGetInteger64i_v}(GLenum target, GLuint index, GLint64 *  data); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code>   */
  public void glGetInteger64i_v(int target, int index, long[] data, int data_offset);

  /** Entry point to C language function: <code> void {@native glGetInteger64v}(GLenum pname, GLint64 *  params); </code> <br>Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code>
      @param params a direct or array-backed {@link java.nio.LongBuffer}   */
  public void glGetInteger64v(int pname, LongBuffer params);

  /** Entry point to C language function: <code> void {@native glGetInteger64v}(GLenum pname, GLint64 *  params); </code> <br>Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code>   */
  public void glGetInteger64v(int pname, long[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetSamplerParameterfv}(GLuint sampler, GLenum pname, GLfloat *  params); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_3</code>
      @param params a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glGetSamplerParameterfv(int sampler, int pname, FloatBuffer params);

  /** Entry point to C language function: <code> void {@native glGetSamplerParameterfv}(GLuint sampler, GLenum pname, GLfloat *  params); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_3</code>   */
  public void glGetSamplerParameterfv(int sampler, int pname, float[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetSamplerParameteriv}(GLuint sampler, GLenum pname, GLint *  params); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_3</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetSamplerParameteriv(int sampler, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetSamplerParameteriv}(GLuint sampler, GLenum pname, GLint *  params); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_3</code>   */
  public void glGetSamplerParameteriv(int sampler, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetSynciv}(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *  length, GLint *  values); </code> <br>Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code>
      @param length a direct or array-backed {@link java.nio.IntBuffer}
      @param values a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetSynciv(long sync, int pname, int bufSize, IntBuffer length, IntBuffer values);

  /** Entry point to C language function: <code> void {@native glGetSynciv}(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *  length, GLint *  values); </code> <br>Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code>   */
  public void glGetSynciv(long sync, int pname, int bufSize, int[] length, int length_offset, int[] values, int values_offset);

  /** Entry point to C language function: <code> GLboolean {@native glIsSampler}(GLuint sampler); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_3</code>   */
  public boolean glIsSampler(int sampler);

  /** Entry point to C language function: <code> GLboolean {@native glIsSync}(GLsync sync); </code> <br>Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code>   */
  public boolean glIsSync(long sync);

  /** Entry point to C language function: <code> void {@native glSamplerParameterf}(GLuint sampler, GLenum pname, GLfloat param); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_3</code>   */
  public void glSamplerParameterf(int sampler, int pname, float param);

  /** Entry point to C language function: <code> void {@native glSamplerParameterfv}(GLuint sampler, GLenum pname, const GLfloat *  param); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_3</code>
      @param param a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glSamplerParameterfv(int sampler, int pname, FloatBuffer param);

  /** Entry point to C language function: <code> void {@native glSamplerParameterfv}(GLuint sampler, GLenum pname, const GLfloat *  param); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_3</code>   */
  public void glSamplerParameterfv(int sampler, int pname, float[] param, int param_offset);

  /** Entry point to C language function: <code> void {@native glSamplerParameteri}(GLuint sampler, GLenum pname, GLint param); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_3</code>   */
  public void glSamplerParameteri(int sampler, int pname, int param);

  /** Entry point to C language function: <code> void {@native glSamplerParameteriv}(GLuint sampler, GLenum pname, const GLint *  param); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_3</code>
      @param param a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glSamplerParameteriv(int sampler, int pname, IntBuffer param);

  /** Entry point to C language function: <code> void {@native glSamplerParameteriv}(GLuint sampler, GLenum pname, const GLint *  param); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_3</code>   */
  public void glSamplerParameteriv(int sampler, int pname, int[] param, int param_offset);

  /** Entry point to C language function: <code> void {@native glVertexAttribDivisor}(GLuint index, GLuint divisor); </code> <br>Part of <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_3</code>; <code>GL_ARB_instanced_arrays</code>   */
  public void glVertexAttribDivisor(int index, int divisor);

  /** Entry point to C language function: <code> void {@native glWaitSync}(GLsync sync, GLbitfield flags, GLuint64 timeout); </code> <br>Part of <code>GL_ARB_sync</code>, <code>GL_ES_VERSION_3_0</code>, <code>GL_VERSION_3_2</code>   */
  public void glWaitSync(long sync, int flags, long timeout);


} // end of class GL3ES3
