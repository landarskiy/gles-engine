/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/opengl/GLEmitter.java on Tue Mar 11 04:17:54 CET 2014 ----! */

package javax.media.opengl;

import java.util.*;
import javax.media.opengl.*;
import javax.media.opengl.fixedfunc.*;
import jogamp.opengl.*;
import com.jogamp.gluegen.runtime.*;
import com.jogamp.common.os.*;
import com.jogamp.common.nio.*;
import java.nio.*;

 /**
  * <p>This interface contains all OpenGL [ 3.1 .. 3.3 ] <i>core</i> methods,
  * as well as most of it's extensions defined at the time of this specification.</p>
  * <p>Note: OpenGL [ 3.1 .. 3.3 ] core profile does not includes fixed point functionality.</p>
  */
public interface GL3 extends GL3ES3, GL2GL3{

  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_CONTEXT_CORE_PROFILE_BIT = 0x00000001;
  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x00000002;
  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_LINES_ADJACENCY = 0x000A;
  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_LINE_STRIP_ADJACENCY = 0x000B;
  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_TRIANGLES_ADJACENCY = 0x000C;
  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_TRIANGLE_STRIP_ADJACENCY = 0x000D;
  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_PROGRAM_POINT_SIZE = 0x8642;
  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8C29;
  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8DA7;
  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8DA8;
  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_GEOMETRY_SHADER = 0x8DD9;
  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_GEOMETRY_VERTICES_OUT = 0x8916;
  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_GEOMETRY_INPUT_TYPE = 0x8917;
  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_GEOMETRY_OUTPUT_TYPE = 0x8918;
  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8DDF;
  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_MAX_GEOMETRY_OUTPUT_VERTICES = 0x8DE0;
  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8DE1;
  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123;
  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124;
  /** Part of <code>GL_VERSION_3_2</code> */
  public static final int GL_CONTEXT_PROFILE_MASK = 0x9126;
  /** Part of <code>GL_VERSION_3_2</code>, <code>GL_ARB_depth_clamp</code> */
  public static final int GL_DEPTH_CLAMP = 0x864F;
  /** Part of <code>GL_VERSION_3_2</code>, <code>GL_ARB_provoking_vertex</code> */
  public static final int GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = 0x8E4C;
  /** Part of <code>GL_VERSION_3_2</code>, <code>GL_ARB_provoking_vertex</code> */
  public static final int GL_FIRST_VERTEX_CONVENTION = 0x8E4D;
  /** Part of <code>GL_VERSION_3_2</code>, <code>GL_ARB_provoking_vertex</code> */
  public static final int GL_LAST_VERTEX_CONVENTION = 0x8E4E;
  /** Part of <code>GL_VERSION_3_2</code>, <code>GL_ARB_provoking_vertex</code> */
  public static final int GL_PROVOKING_VERTEX = 0x8E4F;
  /** Part of <code>GL_ARB_seamless_cube_map</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_TEXTURE_CUBE_MAP_SEAMLESS = 0x884F;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_SAMPLE_POSITION = 0x8E50;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_SAMPLE_MASK = 0x8E51;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_SAMPLE_MASK_VALUE = 0x8E52;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_MAX_SAMPLE_MASK_WORDS = 0x8E59;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_TEXTURE_2D_MULTISAMPLE = 0x9100;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_PROXY_TEXTURE_2D_MULTISAMPLE = 0x9101;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9102;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9103;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_TEXTURE_BINDING_2D_MULTISAMPLE = 0x9104;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = 0x9105;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_TEXTURE_SAMPLES = 0x9106;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = 0x9107;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_SAMPLER_2D_MULTISAMPLE = 0x9108;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_INT_SAMPLER_2D_MULTISAMPLE = 0x9109;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 0x910A;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910B;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910C;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910D;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_MAX_COLOR_TEXTURE_SAMPLES = 0x910E;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_MAX_DEPTH_TEXTURE_SAMPLES = 0x910F;
  /** Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code> */
  public static final int GL_MAX_INTEGER_SAMPLES = 0x9110;
  /** Part of <code>GL_ARB_blend_func_extended</code>, <code>GL_VERSION_3_3</code> */
  public static final int GL_SRC1_COLOR = 0x88F9;
  /** Part of <code>GL_ARB_blend_func_extended</code>, <code>GL_VERSION_3_3</code> */
  public static final int GL_ONE_MINUS_SRC1_COLOR = 0x88FA;
  /** Part of <code>GL_ARB_blend_func_extended</code>, <code>GL_VERSION_3_3</code> */
  public static final int GL_ONE_MINUS_SRC1_ALPHA = 0x88FB;
  /** Part of <code>GL_ARB_blend_func_extended</code>, <code>GL_VERSION_3_3</code> */
  public static final int GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = 0x88FC;
  /** Part of <code>GL_ARB_texture_swizzle</code>, <code>GL_VERSION_3_3</code> */
  public static final int GL_TEXTURE_SWIZZLE_RGBA = 0x8E46;
  /** Part of <code>GL_ARB_timer_query</code>, <code>GL_VERSION_3_3</code> */
  public static final int GL_TIME_ELAPSED = 0x88BF;
  /** Part of <code>GL_ARB_timer_query</code>, <code>GL_VERSION_3_3</code> */
  public static final int GL_TIMESTAMP = 0x8E28;
  /** Part of <code>GL_ARB_texture_compression_bptc</code> */
  public static final int GL_COMPRESSED_RGBA_BPTC_UNORM_ARB = 0x8E8C;
  /** Part of <code>GL_ARB_texture_compression_bptc</code> */
  public static final int GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB = 0x8E8D;
  /** Part of <code>GL_ARB_texture_compression_bptc</code> */
  public static final int GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB = 0x8E8E;
  /** Part of <code>GL_ARB_texture_compression_bptc</code> */
  public static final int GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB = 0x8E8F;

  /** Entry point to C language function: <code> void {@native glBindFragDataLocationIndexed}(GLuint program, GLuint colorNumber, GLuint index, const GLchar *  name); </code> <br>Part of <code>GL_ARB_blend_func_extended</code>, <code>GL_VERSION_3_3</code>   */
  public void glBindFragDataLocationIndexed(int program, int colorNumber, int index, String name);

  /** Entry point to C language function: <code> void {@native glColorP3ui}(GLenum type, GLuint color); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glColorP3ui(int type, int color);

  /** Entry point to C language function: <code> void {@native glColorP3uiv}(GLenum type, const GLuint *  color); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>
      @param color a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glColorP3uiv(int type, IntBuffer color);

  /** Entry point to C language function: <code> void {@native glColorP3uiv}(GLenum type, const GLuint *  color); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glColorP3uiv(int type, int[] color, int color_offset);

  /** Entry point to C language function: <code> void {@native glColorP4ui}(GLenum type, GLuint color); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glColorP4ui(int type, int color);

  /** Entry point to C language function: <code> void {@native glColorP4uiv}(GLenum type, const GLuint *  color); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>
      @param color a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glColorP4uiv(int type, IntBuffer color);

  /** Entry point to C language function: <code> void {@native glColorP4uiv}(GLenum type, const GLuint *  color); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glColorP4uiv(int type, int[] color, int color_offset);

  /** Entry point to C language function: <code> void {@native glDrawElementsBaseVertex}(GLenum mode, GLsizei count, GLenum type, const GLvoid *  indices, GLint basevertex); </code> <br>Part of <code>GL_ARB_draw_elements_base_vertex</code>, <code>GL_VERSION_3_2</code>   */
  public void glDrawElementsBaseVertex(int mode, int count, int type, long indices_buffer_offset, int basevertex);

  /** Entry point to C language function: <code> void {@native glDrawElementsInstancedBaseVertex}(GLenum mode, GLsizei count, GLenum type, const GLvoid *  indices, GLsizei instancecount, GLint basevertex); </code> <br>Part of <code>GL_ARB_draw_elements_base_vertex</code>, <code>GL_VERSION_3_2</code>   */
  public void glDrawElementsInstancedBaseVertex(int mode, int count, int type, long indices_buffer_offset, int instancecount, int basevertex);

  /** Entry point to C language function: <code> void {@native glDrawRangeElementsBaseVertex}(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *  indices, GLint basevertex); </code> <br>Part of <code>GL_ARB_draw_elements_base_vertex</code>, <code>GL_VERSION_3_2</code>   */
  public void glDrawRangeElementsBaseVertex(int mode, int start, int end, int count, int type, long indices_buffer_offset, int basevertex);

  /** Entry point to C language function: <code> void {@native glFramebufferTexture}(GLenum target, GLenum attachment, GLuint texture, GLint level); </code> <br>Part of <code>GL_VERSION_3_2</code>   */
  public void glFramebufferTexture(int target, int attachment, int texture, int level);

  /** Entry point to C language function: <code> GLint {@native glGetFragDataIndex}(GLuint program, const GLchar *  name); </code> <br>Part of <code>GL_ARB_blend_func_extended</code>, <code>GL_VERSION_3_3</code>   */
  public int glGetFragDataIndex(int program, String name);

  /** Entry point to C language function: <code> void {@native glGetMultisamplefv}(GLenum pname, GLuint index, GLfloat *  val); </code> <br>Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code>
      @param val a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glGetMultisamplefv(int pname, int index, FloatBuffer val);

  /** Entry point to C language function: <code> void {@native glGetMultisamplefv}(GLenum pname, GLuint index, GLfloat *  val); </code> <br>Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code>   */
  public void glGetMultisamplefv(int pname, int index, float[] val, int val_offset);

  /** Entry point to C language function: <code> void {@native glGetQueryObjecti64v}(GLuint id, GLenum pname, GLint64 *  params); </code> <br>Part of <code>GL_ARB_timer_query</code>, <code>GL_VERSION_3_3</code>
      @param params a direct or array-backed {@link java.nio.LongBuffer}   */
  public void glGetQueryObjecti64v(int id, int pname, LongBuffer params);

  /** Entry point to C language function: <code> void {@native glGetQueryObjecti64v}(GLuint id, GLenum pname, GLint64 *  params); </code> <br>Part of <code>GL_ARB_timer_query</code>, <code>GL_VERSION_3_3</code>   */
  public void glGetQueryObjecti64v(int id, int pname, long[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetQueryObjectui64v}(GLuint id, GLenum pname, GLuint64 *  params); </code> <br>Part of <code>GL_ARB_timer_query</code>, <code>GL_VERSION_3_3</code>
      @param params a direct or array-backed {@link java.nio.LongBuffer}   */
  public void glGetQueryObjectui64v(int id, int pname, LongBuffer params);

  /** Entry point to C language function: <code> void {@native glGetQueryObjectui64v}(GLuint id, GLenum pname, GLuint64 *  params); </code> <br>Part of <code>GL_ARB_timer_query</code>, <code>GL_VERSION_3_3</code>   */
  public void glGetQueryObjectui64v(int id, int pname, long[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetSamplerParameterIiv}(GLuint sampler, GLenum pname, GLint *  params); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_VERSION_3_3</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetSamplerParameterIiv(int sampler, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetSamplerParameterIiv}(GLuint sampler, GLenum pname, GLint *  params); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_VERSION_3_3</code>   */
  public void glGetSamplerParameterIiv(int sampler, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetSamplerParameterIuiv}(GLuint sampler, GLenum pname, GLuint *  params); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_VERSION_3_3</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetSamplerParameterIuiv(int sampler, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetSamplerParameterIuiv}(GLuint sampler, GLenum pname, GLuint *  params); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_VERSION_3_3</code>   */
  public void glGetSamplerParameterIuiv(int sampler, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glMultiDrawElementsBaseVertex}(GLenum mode, const GLsizei *  count, GLenum type, const GLvoid * const  *  indices, GLsizei drawcount, const GLint *  basevertex); </code> <br>Part of <code>GL_ARB_draw_elements_base_vertex</code>, <code>GL_VERSION_3_2</code>
      @param count a direct only {@link java.nio.IntBuffer}
      @param indices a direct only {@link com.jogamp.common.nio.PointerBuffer}
      @param basevertex a direct only {@link java.nio.IntBuffer}   */
  public void glMultiDrawElementsBaseVertex(int mode, IntBuffer count, int type, PointerBuffer indices, int drawcount, IntBuffer basevertex);

  /** Entry point to C language function: <code> void {@native glMultiTexCoordP1ui}(GLenum texture, GLenum type, GLuint coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glMultiTexCoordP1ui(int texture, int type, int coords);

  /** Entry point to C language function: <code> void {@native glMultiTexCoordP1uiv}(GLenum texture, GLenum type, const GLuint *  coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>
      @param coords a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glMultiTexCoordP1uiv(int texture, int type, IntBuffer coords);

  /** Entry point to C language function: <code> void {@native glMultiTexCoordP1uiv}(GLenum texture, GLenum type, const GLuint *  coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glMultiTexCoordP1uiv(int texture, int type, int[] coords, int coords_offset);

  /** Entry point to C language function: <code> void {@native glMultiTexCoordP2ui}(GLenum texture, GLenum type, GLuint coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glMultiTexCoordP2ui(int texture, int type, int coords);

  /** Entry point to C language function: <code> void {@native glMultiTexCoordP2uiv}(GLenum texture, GLenum type, const GLuint *  coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>
      @param coords a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glMultiTexCoordP2uiv(int texture, int type, IntBuffer coords);

  /** Entry point to C language function: <code> void {@native glMultiTexCoordP2uiv}(GLenum texture, GLenum type, const GLuint *  coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glMultiTexCoordP2uiv(int texture, int type, int[] coords, int coords_offset);

  /** Entry point to C language function: <code> void {@native glMultiTexCoordP3ui}(GLenum texture, GLenum type, GLuint coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glMultiTexCoordP3ui(int texture, int type, int coords);

  /** Entry point to C language function: <code> void {@native glMultiTexCoordP3uiv}(GLenum texture, GLenum type, const GLuint *  coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>
      @param coords a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glMultiTexCoordP3uiv(int texture, int type, IntBuffer coords);

  /** Entry point to C language function: <code> void {@native glMultiTexCoordP3uiv}(GLenum texture, GLenum type, const GLuint *  coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glMultiTexCoordP3uiv(int texture, int type, int[] coords, int coords_offset);

  /** Entry point to C language function: <code> void {@native glMultiTexCoordP4ui}(GLenum texture, GLenum type, GLuint coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glMultiTexCoordP4ui(int texture, int type, int coords);

  /** Entry point to C language function: <code> void {@native glMultiTexCoordP4uiv}(GLenum texture, GLenum type, const GLuint *  coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>
      @param coords a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glMultiTexCoordP4uiv(int texture, int type, IntBuffer coords);

  /** Entry point to C language function: <code> void {@native glMultiTexCoordP4uiv}(GLenum texture, GLenum type, const GLuint *  coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glMultiTexCoordP4uiv(int texture, int type, int[] coords, int coords_offset);

  /** Entry point to C language function: <code> void {@native glNormalP3ui}(GLenum type, GLuint coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glNormalP3ui(int type, int coords);

  /** Entry point to C language function: <code> void {@native glNormalP3uiv}(GLenum type, const GLuint *  coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>
      @param coords a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glNormalP3uiv(int type, IntBuffer coords);

  /** Entry point to C language function: <code> void {@native glNormalP3uiv}(GLenum type, const GLuint *  coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glNormalP3uiv(int type, int[] coords, int coords_offset);

  /** Entry point to C language function: <code> void {@native glProvokingVertex}(GLenum mode); </code> <br>Part of <code>GL_VERSION_3_2</code>, <code>GL_ARB_provoking_vertex</code>   */
  public void glProvokingVertex(int mode);

  /** Entry point to C language function: <code> void {@native glQueryCounter}(GLuint id, GLenum target); </code> <br>Part of <code>GL_ARB_timer_query</code>, <code>GL_VERSION_3_3</code>   */
  public void glQueryCounter(int id, int target);

  /** Entry point to C language function: <code> void {@native glSampleMaski}(GLuint index, GLbitfield mask); </code> <br>Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code>   */
  public void glSampleMaski(int index, int mask);

  /** Entry point to C language function: <code> void {@native glSamplerParameterIiv}(GLuint sampler, GLenum pname, const GLint *  param); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_VERSION_3_3</code>
      @param param a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glSamplerParameterIiv(int sampler, int pname, IntBuffer param);

  /** Entry point to C language function: <code> void {@native glSamplerParameterIiv}(GLuint sampler, GLenum pname, const GLint *  param); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_VERSION_3_3</code>   */
  public void glSamplerParameterIiv(int sampler, int pname, int[] param, int param_offset);

  /** Entry point to C language function: <code> void {@native glSamplerParameterIuiv}(GLuint sampler, GLenum pname, const GLuint *  param); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_VERSION_3_3</code>
      @param param a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glSamplerParameterIuiv(int sampler, int pname, IntBuffer param);

  /** Entry point to C language function: <code> void {@native glSamplerParameterIuiv}(GLuint sampler, GLenum pname, const GLuint *  param); </code> <br>Part of <code>GL_ARB_sampler_objects</code>, <code>GL_VERSION_3_3</code>   */
  public void glSamplerParameterIuiv(int sampler, int pname, int[] param, int param_offset);

  /** Entry point to C language function: <code> void {@native glSecondaryColorP3ui}(GLenum type, GLuint color); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glSecondaryColorP3ui(int type, int color);

  /** Entry point to C language function: <code> void {@native glSecondaryColorP3uiv}(GLenum type, const GLuint *  color); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>
      @param color a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glSecondaryColorP3uiv(int type, IntBuffer color);

  /** Entry point to C language function: <code> void {@native glSecondaryColorP3uiv}(GLenum type, const GLuint *  color); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glSecondaryColorP3uiv(int type, int[] color, int color_offset);

  /** Entry point to C language function: <code> void {@native glTexCoordP1ui}(GLenum type, GLuint coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glTexCoordP1ui(int type, int coords);

  /** Entry point to C language function: <code> void {@native glTexCoordP1uiv}(GLenum type, const GLuint *  coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>
      @param coords a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glTexCoordP1uiv(int type, IntBuffer coords);

  /** Entry point to C language function: <code> void {@native glTexCoordP1uiv}(GLenum type, const GLuint *  coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glTexCoordP1uiv(int type, int[] coords, int coords_offset);

  /** Entry point to C language function: <code> void {@native glTexCoordP2ui}(GLenum type, GLuint coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glTexCoordP2ui(int type, int coords);

  /** Entry point to C language function: <code> void {@native glTexCoordP2uiv}(GLenum type, const GLuint *  coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>
      @param coords a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glTexCoordP2uiv(int type, IntBuffer coords);

  /** Entry point to C language function: <code> void {@native glTexCoordP2uiv}(GLenum type, const GLuint *  coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glTexCoordP2uiv(int type, int[] coords, int coords_offset);

  /** Entry point to C language function: <code> void {@native glTexCoordP3ui}(GLenum type, GLuint coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glTexCoordP3ui(int type, int coords);

  /** Entry point to C language function: <code> void {@native glTexCoordP3uiv}(GLenum type, const GLuint *  coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>
      @param coords a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glTexCoordP3uiv(int type, IntBuffer coords);

  /** Entry point to C language function: <code> void {@native glTexCoordP3uiv}(GLenum type, const GLuint *  coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glTexCoordP3uiv(int type, int[] coords, int coords_offset);

  /** Entry point to C language function: <code> void {@native glTexCoordP4ui}(GLenum type, GLuint coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glTexCoordP4ui(int type, int coords);

  /** Entry point to C language function: <code> void {@native glTexCoordP4uiv}(GLenum type, const GLuint *  coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>
      @param coords a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glTexCoordP4uiv(int type, IntBuffer coords);

  /** Entry point to C language function: <code> void {@native glTexCoordP4uiv}(GLenum type, const GLuint *  coords); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glTexCoordP4uiv(int type, int[] coords, int coords_offset);

  /** Entry point to C language function: <code> void {@native glTexImage2DMultisample}(GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations); </code> <br>Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code>   */
  public void glTexImage2DMultisample(int target, int samples, int internalformat, int width, int height, boolean fixedsamplelocations);

  /** Entry point to C language function: <code> void {@native glTexImage3DMultisample}(GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations); </code> <br>Part of <code>GL_ARB_texture_multisample</code>, <code>GL_VERSION_3_2</code>   */
  public void glTexImage3DMultisample(int target, int samples, int internalformat, int width, int height, int depth, boolean fixedsamplelocations);

  /** Entry point to C language function: <code> void {@native glVertexAttribP1ui}(GLuint index, GLenum type, GLboolean normalized, GLuint value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glVertexAttribP1ui(int index, int type, boolean normalized, int value);

  /** Entry point to C language function: <code> void {@native glVertexAttribP1uiv}(GLuint index, GLenum type, GLboolean normalized, const GLuint *  value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>
      @param value a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glVertexAttribP1uiv(int index, int type, boolean normalized, IntBuffer value);

  /** Entry point to C language function: <code> void {@native glVertexAttribP1uiv}(GLuint index, GLenum type, GLboolean normalized, const GLuint *  value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glVertexAttribP1uiv(int index, int type, boolean normalized, int[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glVertexAttribP2ui}(GLuint index, GLenum type, GLboolean normalized, GLuint value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glVertexAttribP2ui(int index, int type, boolean normalized, int value);

  /** Entry point to C language function: <code> void {@native glVertexAttribP2uiv}(GLuint index, GLenum type, GLboolean normalized, const GLuint *  value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>
      @param value a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glVertexAttribP2uiv(int index, int type, boolean normalized, IntBuffer value);

  /** Entry point to C language function: <code> void {@native glVertexAttribP2uiv}(GLuint index, GLenum type, GLboolean normalized, const GLuint *  value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glVertexAttribP2uiv(int index, int type, boolean normalized, int[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glVertexAttribP3ui}(GLuint index, GLenum type, GLboolean normalized, GLuint value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glVertexAttribP3ui(int index, int type, boolean normalized, int value);

  /** Entry point to C language function: <code> void {@native glVertexAttribP3uiv}(GLuint index, GLenum type, GLboolean normalized, const GLuint *  value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>
      @param value a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glVertexAttribP3uiv(int index, int type, boolean normalized, IntBuffer value);

  /** Entry point to C language function: <code> void {@native glVertexAttribP3uiv}(GLuint index, GLenum type, GLboolean normalized, const GLuint *  value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glVertexAttribP3uiv(int index, int type, boolean normalized, int[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glVertexAttribP4ui}(GLuint index, GLenum type, GLboolean normalized, GLuint value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glVertexAttribP4ui(int index, int type, boolean normalized, int value);

  /** Entry point to C language function: <code> void {@native glVertexAttribP4uiv}(GLuint index, GLenum type, GLboolean normalized, const GLuint *  value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>
      @param value a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glVertexAttribP4uiv(int index, int type, boolean normalized, IntBuffer value);

  /** Entry point to C language function: <code> void {@native glVertexAttribP4uiv}(GLuint index, GLenum type, GLboolean normalized, const GLuint *  value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glVertexAttribP4uiv(int index, int type, boolean normalized, int[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glVertexP2ui}(GLenum type, GLuint value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glVertexP2ui(int type, int value);

  /** Entry point to C language function: <code> void {@native glVertexP2uiv}(GLenum type, const GLuint *  value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>
      @param value a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glVertexP2uiv(int type, IntBuffer value);

  /** Entry point to C language function: <code> void {@native glVertexP2uiv}(GLenum type, const GLuint *  value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glVertexP2uiv(int type, int[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glVertexP3ui}(GLenum type, GLuint value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glVertexP3ui(int type, int value);

  /** Entry point to C language function: <code> void {@native glVertexP3uiv}(GLenum type, const GLuint *  value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>
      @param value a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glVertexP3uiv(int type, IntBuffer value);

  /** Entry point to C language function: <code> void {@native glVertexP3uiv}(GLenum type, const GLuint *  value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glVertexP3uiv(int type, int[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glVertexP4ui}(GLenum type, GLuint value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glVertexP4ui(int type, int value);

  /** Entry point to C language function: <code> void {@native glVertexP4uiv}(GLenum type, const GLuint *  value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>
      @param value a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glVertexP4uiv(int type, IntBuffer value);

  /** Entry point to C language function: <code> void {@native glVertexP4uiv}(GLenum type, const GLuint *  value); </code> <br>Part of <code>GL_ARB_vertex_type_2_10_10_10_rev</code>, <code>GL_VERSION_3_3</code>   */
  public void glVertexP4uiv(int type, int[] value, int value_offset);


} // end of class GL3
